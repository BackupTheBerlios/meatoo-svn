#!/usr/bin/env python


"""
Autogenerated by CHEETAH: The Python-Powered Template Engine
 CHEETAH VERSION: 0.9.17
 Generation time: Fri Jul 22 23:32:45 2005
   Source file: body.html
   Source file last modified: Fri Jul 22 23:30:15 2005
"""

__CHEETAH_genTime__ = 'Fri Jul 22 23:32:45 2005'
__CHEETAH_src__ = 'body.html'
__CHEETAH_version__ = '0.9.17'

##################################################
## DEPENDENCIES

import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromFrameOrSearchList
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS

try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFN=valueForName
currentTime=time.time

##################################################
## CLASSES

class body(Template):
    """
    
    Autogenerated by CHEETAH: The Python-Powered Template Engine
    """

    ##################################################
    ## GENERATED METHODS


    def __init__(self, *args, **KWs):
        """
        
        """

        Template.__init__(self, *args, **KWs)

    def respond(self,
            trans=None,
            dummyTrans=False,
            VFFSL=valueFromFrameOrSearchList,
            VFN=valueForName,
            getmtime=getmtime,
            currentTime=time.time):


        """
        This is the main method generated by Cheetah
        """

        if not trans:
            trans = DummyTransaction()
            dummyTrans = True
        write = trans.response().write
        SL = self._searchList
        filter = self._currentFilter
        globalSetVars = self._globalSetVars
        
        ########################################
        ## START - generated method body
        
        write('''
<table><tr>
<td width="13%">
''')
        if VFFSL(SL,"my_herds",True):
            write('<br>\n<b>My Herds</b><br>\n')
            for my_h in VFFSL(SL,"my_herds",True):
                write('    <a href="/meatoo/search/short/')
                write(filter(VFFSL(SL,"my_h",True), rawExpr='$my_h')) # from line 8, col 35.
                write('/herd">')
                write(filter(VFFSL(SL,"my_h",True), rawExpr='$my_h')) # from line 8, col 47.
                write('</a><br>\n')
        write('<br><b>All Herds </b><a href="/meatoo/add_herd">[+]</a>\n<br />\n')
        for h in VFFSL(SL,"herds",True):
            write('<!-- <a href="/meatoo/')
            write(filter(VFFSL(SL,"h.herd",True), rawExpr='$h.herd')) # from line 14, col 23.
            write('"> -->\n')
            write(filter(VFFSL(SL,"h.herd",True), rawExpr='$h.herd')) # from line 15, col 1.
            write('\n<!-- </a> -->\n<a href="/meatoo/edit_herd/')
            write(filter(VFFSL(SL,"h.herd",True), rawExpr='$h.herd')) # from line 17, col 28.
            write('"><img border=0 src="/meatoo/static/edit.gif"></a>\n<br />\n')
        write('</td>\n<td width="55%"><table><br><b>Latest:</b>\n')
        for pkg in VFFSL(SL,"packages",True):
            if VFFSL(SL,"pkg.latestReleaseDate",True) == VFFSL(SL,"week",True)[0] or VFFSL(SL,"pkg.latestReleaseDate",True) == VFFSL(SL,"week",True)[1]:
                write('''    <tr class="alt">
    <td>

''')
                if VFFSL(SL,"verbose",True):
                    write('        (')
                    write(filter(VFFSL(SL,"pkg.id",True), rawExpr='$pkg.id')) # from line 28, col 10.
                    write(')\n')
                write('\n    <b><a href="http://packages.gentoo.org/search/?sstring=%5E')
                write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 31, col 63.
                write('%24">\n    ')
                write(filter(VFFSL(SL,"pkg.portageCategory",True), rawExpr='$pkg.portageCategory')) # from line 32, col 5.
                write('/')
                write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 32, col 26.
                write('-')
                write(filter(VFFSL(SL,"pkg.portageVersion",True), rawExpr='$pkg.portageVersion')) # from line 32, col 43.
                write('</a> [\n    <a class="nav" href="http://freshmeat.net/projects/')
                write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 33, col 56.
                write('/" title="Freshmeat Latest Release">')
                write(filter(VFFSL(SL,"pkg.latestReleaseVersion",True), rawExpr='$pkg.latestReleaseVersion')) # from line 33, col 108.
                write('</a> ]</b>\n    ')
                write(filter(VFFSL(SL,"pkg.latestReleaseDate",True), rawExpr='$pkg.latestReleaseDate')) # from line 34, col 5.
                write(' \n\n    <a class="nav" href="/meatoo/ignore/')
                write(filter(VFFSL(SL,"pkg.id",True), rawExpr='$pkg.id')) # from line 36, col 41.
                write('" title="Ignore this version of this package.">\n    <img border=0 src="/meatoo/static/edit.png" alt="Ignore"></a>\n    <a class="nav" href="/meatoo/add_known/')
                write(filter(VFFSL(SL,"pkg.fmName",True), rawExpr='$pkg.fmName')) # from line 38, col 44.
                write('" title="Edit Portage name">\n    <img border=0 src="/meatoo/static/edit.gif"></a>\n    <a class="nav" href="')
                write(filter(VFFSL(SL,"pkg.urlHomepage",True), rawExpr='$pkg.urlHomepage')) # from line 40, col 26.
                write('''" title="Project Homepage">
    <img border=0 src="/meatoo/static/home.png"></a>

    <a class="nav" href="http://freshmeat.net/redir/''')
                write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 43, col 53.
                write('/')
                write(filter(VFFSL(SL,"pkg.urlChangelog",True), rawExpr='$pkg.urlChangelog')) # from line 43, col 70.
                write('''/url_changelog/" title="View ChangeLog">
    <img border=0 src="/meatoo/static/changelog.gif" alt="changelog"></a>

    </td></tr><tr><td><br>
    ''')
                write(filter(VFFSL(SL,"pkg.portageDesc",True), rawExpr='$pkg.portageDesc')) # from line 47, col 5.
                write('''
    <br><br>
    <b>Freshmeat description:</b><br>
    ''')
                write(filter(VFFSL(SL,"pkg.descShort",True), rawExpr='$pkg.descShort')) # from line 50, col 5.
                write('<br><br>\n    <b>Maintainers:</b> ')
                write(filter(VFFSL(SL,"pkg.maintainerName",True), rawExpr='$pkg.maintainerName')) # from line 51, col 25.
                write('<br><br></td></tr>\n')
        write('''</table>
</td>
<td>
<table>
''')
        i = 0
        while VFFSL(SL,"i",True) < 5:
            write('    <tr class="alt"><td colspan=3><b>')
            write(filter(VFFSL(SL,"week",True)[VFFSL(SL,"i",True)], rawExpr='$week[$i]')) # from line 60, col 38.
            write('</b></tr>\n')
            for pkg in VFFSL(SL,"packages",True):
                write('')
                if VFFSL(SL,"pkg.latestReleaseDate",True) == VFFSL(SL,"week",True)[VFFSL(SL,"i",True)]:
                    write('            <tr><td>\n            <a href="http://packages.gentoo.org/search/?sstring=%5E')
                    write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 64, col 68.
                    write('%24">\n            ')
                    write(filter(VFFSL(SL,"pkg.portageCategory",True), rawExpr='$pkg.portageCategory')) # from line 65, col 13.
                    write('/')
                    write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 65, col 34.
                    write('-')
                    write(filter(VFFSL(SL,"pkg.portageVersion",True), rawExpr='$pkg.portageVersion')) # from line 65, col 51.
                    write('</a> [\n            <a class="nav" href="http://freshmeat.net/projects/')
                    write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 66, col 64.
                    write('/" title="Freshmeat Latest Release">')
                    write(filter(VFFSL(SL,"pkg.latestReleaseVersion",True), rawExpr='$pkg.latestReleaseVersion')) # from line 66, col 116.
                    write('''</a> ]
    </td>

    <td>
    <a class="nav" href="/meatoo/ignore/''')
                    write(filter(VFFSL(SL,"pkg.id",True), rawExpr='$pkg.id')) # from line 70, col 41.
                    write('" title="Ignore this version of this package.">\n    <img border=0 src="/meatoo/static/edit.png" alt="Ignore"></a>\n    <a class="nav" href="/meatoo/add_known/')
                    write(filter(VFFSL(SL,"pkg.fmName",True), rawExpr='$pkg.fmName')) # from line 72, col 44.
                    write('" title="Edit Portage name">\n    <img border=0 src="/meatoo/static/edit.gif"></a>\n    <a class="nav" href="')
                    write(filter(VFFSL(SL,"pkg.urlHomepage",True), rawExpr='$pkg.urlHomepage')) # from line 74, col 26.
                    write('''" title="Project Homepage">
    <img border=0 src="/meatoo/static/home.png"></a>

    <a class="nav" href="http://freshmeat.net/redir/''')
                    write(filter(VFFSL(SL,"pkg.packageName",True), rawExpr='$pkg.packageName')) # from line 77, col 53.
                    write('/')
                    write(filter(VFFSL(SL,"pkg.urlChangelog",True), rawExpr='$pkg.urlChangelog')) # from line 77, col 70.
                    write('''/url_changelog/" title="View ChangeLog">
    <img border=0 src="/meatoo/static/changelog.gif" alt="changelog"></a>
            </td></tr>
''')
                write('')
            write('')
            i += 1
        write('</table></td></tr></table>\n')
        
        ########################################
        ## END - generated method body
        
        if dummyTrans:
            return trans.response().getvalue()
        else:
            return ""
        
    ##################################################
    ## GENERATED ATTRIBUTES


    __str__ = respond

    _mainCheetahMethod_for_body= 'respond'


# CHEETAH was developed by Tavis Rudd, Mike Orr, Ian Bicking and Chuck Esterbrook;
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org

##################################################
## if run from command line:
if __name__ == '__main__':
    body().runAsMainProgram()

